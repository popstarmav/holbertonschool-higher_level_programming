Using `say_my_name`
-----------------------

Verifies whether `first_name` or `last_name` is a valid string.
Prints the message "My name is <first name> <last name>."

First, import the `say_my_name` function:

    >>> say_my_name = __import__('3-say_my_name').say_my_name

Now, let's utilize it:

Basic Usage:

    >>> say_my_name("John", "Smith")
    My name is John Smith

Input with First Name Only:

    >>> say_my_name("Bob")
    My name is Bob

Non-String Input (for both `first_name` and `last_name`):

    >>> say_my_name(3, 3)
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

Non-String Input Without `last_name`:

    >>> say_my_name(3)
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

No Inputs Provided:

    >>> say_my_name()
    Traceback (most recent call last):
    ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Invalid Type for `last_name`:

    >>> say_my_name("Bob", 3)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string
